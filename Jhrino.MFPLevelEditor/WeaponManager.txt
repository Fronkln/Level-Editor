using System;
using System.Collections.Generic;
using UnityEngine;
using Rewired;

namespace Jhrino.MFPLevelEditor
{
	// Token: 0x020002AD RID: 685
	public class WeaponManager : MonoBehaviour
	{
		public Player player;

		public List<AnimationClip> kickAnims = new List<AnimationClip>();

		public AnimationClip fightStance, defaultStance;
		
		public AudioSource kickWooshAudio;

		public AnimatorOverrideController punchAnim;

		public bool left = false;
		public bool kPunch = false;

		public RootScript root;


		[System.Flags]
		public enum MFPSlot9Weapon
		{
			NONE,
			SNIPER,
			CROSSBOW
		}

		public MFPSlot9Weapon Slot9Weapon = MFPSlot9Weapon.SNIPER;

		// Token: 0x06000861 RID: 2145
		public void Awake()
		{
			this.playerScript = base.GetComponent<PlayerScript>();
			this.playerAnim = base.GetComponentInChildren<Animator>();
			this.handR = transform.Find("PlayerGraphics/Armature/Center/LowerBack/UpperBack/Neck/Head");
			player = ReInput.players.GetPlayer(0);

			kickWooshAudio = this.transform.Find("PlayerGraphics/Armature/Center/Hip_L/UpperLeg_L/LowerLeg_L/Foot_L/FootTip_L").gameObject.GetComponent<AudioSource>();

			root = GameObject.FindObjectOfType<RootScript>();
		}

		public void OnEnable()
		{
			Slot9Weapon = MFPSlot9Weapon.SNIPER;
		}

		// Token: 0x06000863 RID: 2147
		public WeaponManager()
		{
		}


		public enum MFPAttackStance
		{
			KICKING,
			FIGHTCLUB
		}

		public MFPAttackStance attackStance;


		public void SwitchFists(bool left)
		{
			if(left)
			{
			this.punchAnim["Attack_Kick0"] = AnimationClips[40];
			this.punchAnim["Attack_Kick45"] = AnimationClips[40];;
			this.punchAnim["Attack_Kick90"] = AnimationClips[40];;
			this.punchAnim["Attack_Kick135"] = AnimationClips[40];;
			this.punchAnim["Attack_Kick170"] = AnimationClips[40];;
			}
			else
			{
					this.punchAnim["Attack_Kick0"] = AnimationClips[39];
					this.punchAnim["Attack_Kick45"] = AnimationClips[39];;
					this.punchAnim["Attack_Kick90"] = AnimationClips[39];;
					this.punchAnim["Attack_Kick135"] = AnimationClips[39];;
					this.punchAnim["Attack_Kick170"] = AnimationClips[39];;
			}

		}

		public void SwitchFightMode(MFPAttackStance stance)
		{
			switch(stance)
			{
				case MFPAttackStance.KICKING:
					this.punchAnim["Idle"] = defaultStance;
					this.punchAnim["Attack_Kick0"] = kickAnims[0];
					this.punchAnim["Attack_Kick45"] = kickAnims[1];
					this.punchAnim["Attack_Kick90"] = kickAnims[2];
					this.punchAnim["Attack_Kick135"] = kickAnims[3];
					this.punchAnim["Attack_Kick170"] = kickAnims[4];
				break;
				case MFPAttackStance.FIGHTCLUB:
					this.punchAnim["Idle"] = AnimationClips[38];
					this.punchAnim["Attack_Kick0"] = AnimationClips[40];
					this.punchAnim["Attack_Kick45"] = AnimationClips[40];;
					this.punchAnim["Attack_Kick90"] = AnimationClips[40];;
					this.punchAnim["Attack_Kick135"] = AnimationClips[40];;
					this.punchAnim["Attack_Kick170"] = AnimationClips[40];;
				break;
			}
		}


		public void LateUpdate()
		{
			
			if(player.GetButtonDown("Rifle"))
			{

				if(playerScript.weaponActive[9] && !playerScript.weaponActive[10])
					return;

				if(playerScript.weaponActive[10] && !playerScript.weaponActive[9] && playerScript.weapon != 10)
					playerScript.changeWeapon(10);

				if(playerScript.weaponActive[9] && playerScript.weaponActive[10])
					if(Slot9Weapon == MFPSlot9Weapon.SNIPER)
					{
						playerScript.changeWeapon(10);
						Slot9Weapon = MFPSlot9Weapon.CROSSBOW;
						return;
					}
					else
					{
						playerScript.changeWeapon(9);
						Slot9Weapon = MFPSlot9Weapon.SNIPER;
						return;
					}
			}
				
		}

		// Token: 0x0600087E RID: 2174
		public void Update()
		{

			if(playerScript.weapon != 0 && Input.GetKeyDown(KeyCode.Alpha0))
			{
				
				playerScript.changeWeapon(0);
				attackStance = MFPAttackStance.FIGHTCLUB;
				SwitchFightMode(attackStance);
				playerAnim.SetFloat("IdleNr", 0);
			}

			if(Input.GetKeyDown(KeyCode.Alpha8) && playerScript.weaponActive[7] && playerScript.weapon != 7)
				playerScript.changeWeapon(7);
			if(Input.GetKeyDown(KeyCode.Alpha9) && playerScript.weaponActive[8] && playerScript.weapon != 8)
				playerScript.changeWeapon(8);

			
					if(player.GetButtonDown("Kick"))
					{
						if(attackStance == MFPAttackStance.FIGHTCLUB)
						{
							attackStance = MFPAttackStance.KICKING;
							SwitchFightMode(attackStance);
						}
						
					}



			if(playerScript.weapon > 0 && attackStance == MFPAttackStance.FIGHTCLUB)
			{
				attackStance = MFPAttackStance.KICKING;
				SwitchFightMode(attackStance);
			}

			if(playerScript.weapon == 0)
			{
				RaycastHit hit;

				if(playerAnim.GetFloat("IdleNr") == 1)
					playerAnim.SetFloat("IdleNr", 0);
					

				if(playerScript.punchTimer <= 15)
				{
					if(player.GetButtonDown("Fire"))
					{

							if(attackStance == MFPAttackStance.KICKING)
							{
							    attackStance = MFPAttackStance.FIGHTCLUB;
								SwitchFightMode(attackStance);
							}

							kPunch = true;
							playerAnim.CrossFadeInFixedTime("MeleeKick", 0.05f, 0, 0.15f);
							playerScript.punchTimer = 30f;
							kickWooshAudio.clip = playerScript.kickWooshSound;
							kickWooshAudio.pitch = UnityEngine.Random.Range(0.9f, 1.1f);
							kickWooshAudio.volume = UnityEngine.Random.Range(0.9f, 1f);
							kickWooshAudio.Play();


							//kickwooshsource unutma


							root.rumble(0, 0.2f, 0.05f);
							root.rumble(1, 0.1f, 0.15f);

							playerScript.meleeKickHit = false;

							playerScript.timeSinceMeleeUsed = 0;
							root.doMeleeHint = false;
							playerScript.nrOfDodgeSpins = 0;
							playerScript.dodgeSpinAngle = 0;
							playerAnim.SetBool("Dodging", false);
							playerScript.dodging = false;


					if(left)
					{
						left = false;
						SwitchFists(left);
					}
					else
					{
						left = true;
						SwitchFists(left);
					}


					if (Physics.Raycast(this.handR.position, this.handR.transform.forward, out hit, (float)this.layerMaskIncEnemiesAndEnemyGameCollision) && hit.distance <= 1f)
					{
						EnemyScript enemyScript = hit.transform.root.GetComponent<EnemyScript>();
						if (enemyScript != null)
						{
							enemyScript.bulletHit = true;
							enemyScript.bulletStrength += 1f;
							enemyScript.bulletHitName = hit.collider.name;
							enemyScript.bulletHitPos = hit.point;
							enemyScript.bulletHitRot = base.transform.rotation;
							enemyScript.bulletHitVel = new Vector3((float)((!this.playerScript.faceRight) ? -10 : 10), 1f, 0f);
							enemyScript.allowGib = false;
							enemyScript.bulletTimeAlive = 999f;
							enemyScript.shootTimer = (float)UnityEngine.Random.Range(70, 100);
							enemyScript.knockBack(base.transform.position.x < hit.collider.transform.position.x, 20f);
						}
					}
					}
					
				}
			}
		}

		// Token: 0x06000881 RID: 2177
		public void Start()
		{
			this.punchAnim = new AnimatorOverrideController(this.playerAnim.runtimeAnimatorController);
			this.AnimationClips = this.playerAnim.runtimeAnimatorController.animationClips;

				foreach(AnimationClip clip in AnimationClips)
				{
					if(clip.name.Contains("Kick") && !clip.name.Contains("Crouch") && !clip.name.Contains("Item"))
					{
						kickAnims.Add(clip);
					}

					if(clip.name == "Idle")
					 defaultStance = clip;
					
					
				}
			this.playerAnim.runtimeAnimatorController = this.punchAnim;

			SwitchFightMode(MFPAttackStance.FIGHTCLUB);
		}

		// Token: 0x040013E9 RID: 5097
		public PlayerScript playerScript;

		// Token: 0x040013EA RID: 5098
		public Animator playerAnim;

		// Token: 0x040013FD RID: 5117
		private AnimationClip[] AnimationClips;	

		// Token: 0x040013FE RID: 5118

		// Token: 0x04001423 RID: 5155
		public LayerMask layerMaskIncEnemiesAndEnemyGameCollision = 33662208;

		// Token: 0x04001487 RID: 5255
		public Transform handR;
	}
}
